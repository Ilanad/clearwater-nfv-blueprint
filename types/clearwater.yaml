#######################################################################
# 
#   Copyright (c) 2015 Orange
#   valentin.boucher@orange.com
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
########################################################################

node_types:
  #Â Global type for clearwater nodes (create local_config file)
  clearwater.nodes.config:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      private_domain:
        description: Private domain for clearwater internal load-balancing
        type: string
      timezone:
        description: Time zone to be set
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/clearwater/other/configure.py
          inputs:
            public_ip:
              default: ''

  clearwater.nodes.monitoredconfig:
    derived_from: clearwater.nodes.config
    interfaces:
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
              default:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}
                SNMPProxyCollector:
                  path: scripts/monitoring/snmpproxy.py
                  config: { get_attribute: [SELF, snmp_config]}

  # Specific types for clearwater nodes (install role etc.)
  clearwater.nodes.sprout:
    derived_from: clearwater.nodes.monitoredconfig
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/sprout/install-sprout.sh
        stop: scripts/clearwater/sprout/stop-sprout.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.bono:
    derived_from: clearwater.nodes.monitoredconfig
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/bono/install-bono.sh
        stop: scripts/clearwater/bono/stop-bono.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.homestead:
    derived_from: clearwater.nodes.monitoredconfig
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/homestead/install-homestead.sh
        stop: scripts/clearwater/homestead/stop-homestead.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.homer:
    derived_from: clearwater.nodes.config
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/homer/install-homer.sh
        stop: scripts/clearwater/homer/stop-homer.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.ralf:
    derived_from: clearwater.nodes.monitoredconfig
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/ralf/install-ralf.sh
        stop: scripts/clearwater/ralf/stop-ralf.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.ellis:
    derived_from: clearwater.nodes.config
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/clearwater/ellis/install-ellis.sh
        stop: scripts/clearwater/ellis/stop-ellis.sh
        delete: scripts/clearwater/other/remove-cluster-node.sh

  clearwater.nodes.stress-test:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      public_domain:
        type: string
      bono_servers:
        type: string
      number_of_subscribers:
        type: integer
      homestead_ip:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/clearwater/stress-test/install-stress-test.sh
          inputs:
            homestead_ip:
              default: { get_property: [SELF, homestead_ip] }
            public_domain:
              default: { get_property: [SELF, public_domain]}
            bono_servers:
              default: { get_property: [SELF, bono_servers]}
            number_of_subscribers:
              default: { get_property: [SELF, number_of_subscribers]}
        stop: scripts/clearwater/stress-test/stop-stress-test.sh

  clearwater.nodes.bulknumber.homestead:
    derived_from: cloudify.nodes.Compute
    properties:
      agent_config:
        default:
          install_method: none
      name:
        type: string
      home_domain:
        type: string
      ssh_user:
        type: string
      ssh_key:
        type: string
      homestead_ip:
        type: string
      number_of_subscribers:
        type: integer
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/clearwater/stress-test/bulk-provisioning-numbers-homestead.sh
            name:
              default: { get_property: [SELF, name]}
            home_domain:
              default: { get_property: [SELF, home_domain]}
            number_of_subscribers:
              default: { get_property: [SELF, number_of_subscribers]}
            fabric_env:
              default:
                user: { get_property: [SELF, ssh_user] }
                key_filename: { get_property: [SELF, ssh_key] }
                host_string: { get_property: [SELF, homestead_ip] }
                always_use_pty: true
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/clearwater/stress-test/uninstall.sh
            name:
              default: { get_property: [SELF, name] }
            fabric_env:
              default:
                user: { get_property: [SELF, ssh_user] }
                key_filename: { get_property: [SELF, ssh_key] }
                host_string: { get_property: [SELF, homestead_ip] }
                always_use_pty: true

  clearwater.nodes.bulknumber.homer:
    derived_from: cloudify.nodes.Compute
    properties:
      agent_config:
        default:
          install_method: none
      homestead_ip:
        type: string
      name:
        type: string
      ssh_key:
        type: string
      ssh_user:
        type: string
      homer_ip:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/clearwater/stress-test/bulk-provisioning-numbers-homer.sh
            homestead_ip:
              default: { get_property: [SELF, homestead_ip]}
            name:
              default: { get_property: [SELF, name]}
            fabric_env:
              default:
                user: { get_property: [SELF, ssh_user] }
                key_filename: { get_property: [SELF, ssh_key] }
                host_string: { get_property: [SELF, homer_ip] }
                always_use_pty: true
        delete:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/clearwater/stress-test/uninstall.sh
            name:
              default: { get_property: [SELF, name]}
            fabric_env:
              default:
                user: { get_property: [SELF, ssh_user] }
                key_filename: { get_property: [SELF, ssh_key] }
                host_string: { get_property: [SELF, homer_ip] }
                always_use_pty: true